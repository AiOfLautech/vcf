<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= groupName %> | Contact Gain</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/style.css">
  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <style>
    :root {
      --primary: #6366f1;
      --primary-light: #818cf8;
      --dark: #1e293b;
      --light: #f8fafc;
      --gray: #94a3b8;
      --card-bg: #ffffff;
      --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      background: #f1f5f9;
      height: 100vh;
      overflow: hidden;
    }

    .chat-container {
      display: flex;
      flex-direction: column;
      height: 100vh;
      max-width: 1000px;
      margin: 0 auto;
      background: var(--card-bg);
      box-shadow: var(--card-shadow);
    }

    .chat-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem;
      border-bottom: 1px solid #e2e8f0;
      background: var(--dark);
      color: white;
    }

    .group-info {
      display: flex;
      align-items: center;
      gap: 1rem;
      cursor: pointer;
    }

    .group-info img {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      object-fit: cover;
    }

    .hashtag-btn {
      padding: 0.5rem 1rem;
      background: var(--primary);
      border-radius: 20px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .group-info-panel {
      position: absolute;
      top: 70px;
      left: 50%;
      transform: translateX(-50%);
      width: 90%;
      max-width: 400px;
      background: white;
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: var(--card-shadow);
      z-index: 100;
      display: none;
    }

    .chat-messages {
      flex: 1;
      overflow-y: auto;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .message {
      display: flex;
      gap: 1rem;
      max-width: 80%;
    }

    .message.self {
      align-self: flex-end;
      flex-direction: row-reverse;
    }

    .message-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
    }

    .message-content {
      background: #f1f5f9;
      padding: 0.8rem 1rem;
      border-radius: 12px;
      max-width: 100%;
    }

    .message.self .message-content {
      background: var(--primary-light);
      color: white;
    }

    .message-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.5rem;
    }

    .message-username {
      font-weight: 600;
    }

    .message-time {
      font-size: 0.8rem;
      color: var(--gray);
    }

    .message.self .message-time {
      color: rgba(255, 255, 255, 0.8);
    }

    .message-actions {
      display: flex;
      gap: 0.5rem;
      margin-top: 0.5rem;
      opacity: 0;
      transition: opacity 0.3s;
    }

    .message:hover .message-actions {
      opacity: 1;
    }

    .message-action {
      background: none;
      border: none;
      color: var(--gray);
      cursor: pointer;
      font-size: 0.8rem;
    }

    .typing-indicator {
      height: 20px;
      padding: 0 1rem;
      font-style: italic;
      color: var(--gray);
    }

    .chat-input {
      display: flex;
      gap: 1rem;
      padding: 1rem;
      border-top: 1px solid #e2e8f0;
      background: white;
    }

    .chat-input input {
      flex: 1;
      padding: 0.8rem 1rem;
      border: 1px solid #e2e8f0;
      border-radius: 20px;
    }

    .chat-input button {
      padding: 0.8rem 1.5rem;
      background: var(--primary);
      color: white;
      border: none;
      border-radius: 20px;
      cursor: pointer;
    }

    .ai-panel {
      position: fixed;
      bottom: 70px;
      right: 20px;
      width: 300px;
      background: white;
      border-radius: 12px;
      box-shadow: var(--card-shadow);
      padding: 1rem;
      display: none;
      z-index: 100;
    }

    .online-dot {
      display: inline-block;
      width: 10px;
      height: 10px;
      background: #10b981;
      border-radius: 50%;
      margin-left: 5px;
    }

    .admin-badge {
      color: var(--primary);
      margin-left: 5px;
    }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="chat-header">
      <div class="group-info" onclick="toggleGroupInfo()">
        <img src="/images/group-icon.png" alt="Group Icon">
        <div>
          <h3><%= groupName %></h3>
          <p><span id="online-count"><%= members.filter(m => m.online).length %></span> online</p>
        </div>
      </div>
      <div class="hashtag-btn" onclick="openAIFeatures()">
        <i class="fas fa-hashtag"></i> AI
      </div>
    </div>

    <div class="group-info-panel" id="groupInfoPanel">
      <h4><%= groupName %></h4>
      <p><%= groupDescription %></p>
      <p>Members: <span id="member-count"><%= members.length %></span></p>
      <button onclick="copyGroupLink()">Copy Group Link</button>
      
      <div class="member-list">
        <% members.forEach(member => { %>
          <div class="member">
            <img src="<%= member.avatar || '/images/default-avatar.png' %>" 
                 alt="<%= member.username %>" 
                 width="30" height="30" 
                 style="border-radius: 50%;">
            <span><%= member.username %></span>
            <% if (member.isAdmin) { %>
              <i class="fas fa-shield-alt admin-badge"></i>
            <% } %>
            <% if (member.online) { %>
              <span class="online-dot"></span>
            <% } %>
          </div>
        <% }); %>
      </div>
    </div>

    <div class="chat-messages" id="chatMessages">
      <% messages.forEach(message => { %>
        <% if (message.deleted) { %>
          <div class="message">
            <div class="message-content">
              <p><i>This message was deleted by <%= message.deletedBy === 'admin' ? 'admin' : 'user' %></i></p>
            </div>
          </div>
        <% } else { %>
          <div class="message <%= message.userId._id.toString() === user._id.toString() ? 'self' : '' %>">
            <img src="<%= message.userId.avatar || '/images/default-avatar.png' %>" 
                 alt="<%= message.userId.username %>" 
                 class="message-avatar">
            <div class="message-content">
              <div class="message-header">
                <span class="message-username">
                  <%= message.userId.username %>
                  <% if (message.userId.isAdmin) { %>
                    <i class="fas fa-shield-alt admin-badge"></i>
                  <% } %>
                </span>
                <span class="message-time">
                  <%= new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
                </span>
              </div>
              <p><%= message.content %></p>
              <% if (message.edited) { %>
                <small><i>edited</i></small>
              <% } %>
              <div class="message-actions">
                <% if (message.userId._id.toString() === user._id.toString() || user.isAdmin) { %>
                  <button class="message-action" onclick="editMessage('<%= message._id %>')">
                    <i class="fas fa-edit"></i>
                  </button>
                  <button class="message-action" onclick="deleteMessage('<%= message._id %>', <%= user.isAdmin %>)">
                    <i class="fas fa-trash"></i>
                  </button>
                <% } %>
                <button class="message-action" onclick="replyToMessage('<%= message.userId.username %>')">
                  <i class="fas fa-reply"></i>
                </button>
              </div>
            </div>
          </div>
        <% } %>
      <% }); %>
    </div>

    <div class="typing-indicator" id="typingIndicator"></div>

    <div class="chat-input">
      <input type="text" id="messageInput" placeholder="Type a message..." 
             oninput="handleTyping()">
      <button onclick="sendMessage()">Send</button>
    </div>

    <div class="ai-panel" id="aiPanel">
      <h4>AI Assistant</h4>
      <input type="text" id="aiPrompt" placeholder="Ask me anything...">
      <button onclick="sendAIPrompt()">Ask</button>
      <div class="ai-response" id="aiResponse"></div>
    </div>
  </div>

  <script>
    const socket = io();
    const sessionId = '<%= sessionId %>';
    const userId = '<%= user._id %>';
    const username = '<%= user.username %>';
    const isAdmin = <%= user.isAdmin %>;
    
    // Join session and notify online status
    socket.emit('user-online', userId);
    socket.emit('join-session', sessionId);
    
    // Scroll to bottom of messages
    function scrollToBottom() {
      const chatMessages = document.getElementById('chatMessages');
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }
    
    // Handle new messages
    socket.on('new-message', (message) => {
      const chatMessages = document.getElementById('chatMessages');
      const isSelf = message.userId === userId;
      
      let messageHTML = `
        <div class="message ${isSelf ? 'self' : ''}">
          <img src="/images/default-avatar.png" alt="Avatar" class="message-avatar">
          <div class="message-content">
            <div class="message-header">
              <span class="message-username">
                ${message.userId.username}
                ${message.userId.isAdmin ? '<i class="fas fa-shield-alt admin-badge"></i>' : ''}
              </span>
              <span class="message-time">
                ${new Date(message.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
              </span>
            </div>
            <p>${message.content}</p>
            <div class="message-actions">
              ${(message.userId === userId || isAdmin) ? `
                <button class="message-action" onclick="editMessage('${message._id}')">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="message-action" onclick="deleteMessage('${message._id}', ${isAdmin})">
                  <i class="fas fa-trash"></i>
                </button>
              ` : ''}
              <button class="message-action" onclick="replyToMessage('${message.userId.username}')">
                <i class="fas fa-reply"></i>
              </button>
            </div>
          </div>
        </div>
      `;
      
      chatMessages.innerHTML += messageHTML;
      scrollToBottom();
    });
    
    // Handle deleted messages
    socket.on('message-deleted', (data) => {
      const messageElement = document.querySelector(`[data-id="${data.messageId}"]`);
      if (messageElement) {
        messageElement.innerHTML = `
          <div class="message-content">
            <p><i>This message was deleted by ${data.deletedBy === 'admin' ? 'admin' : 'user'}</i></p>
          </div>
        `;
      }
    });
    
    // Handle typing indicators
    socket.on('user-typing', (data) => {
      if (data.userId === userId) return;
      
      const typingIndicator = document.getElementById('typingIndicator');
      typingIndicator.textContent = `${data.username} is typing...`;
      
      setTimeout(() => {
        typingIndicator.textContent = '';
      }, 3000);
    });
    
    // Handle AI responses
    socket.on('ai-response', (response) => {
      const chatMessages = document.getElementById('chatMessages');
      chatMessages.innerHTML += `
        <div class="message">
          <div class="message-content">
            <div class="message-header">
              <span class="message-username">
                <i class="fas fa-robot"></i> AI Assistant
              </span>
            </div>
            <p>${response.content}</p>
          </div>
        </div>
      `;
      scrollToBottom();
    });
    
    // Handle online users update
    socket.on('online-users', (userIds) => {
      document.getElementById('online-count').textContent = userIds.length;
    });
    
    // Message functions
    function sendMessage() {
      const input = document.getElementById('messageInput');
      const content = input.value.trim();
      
      if (content) {
        socket.emit('chat-message', {
          sessionId,
          userId,
          username,
          content
        });
        input.value = '';
      }
    }
    
    function handleTyping() {
      socket.emit('typing', { 
        sessionId, 
        userId,
        username 
      });
    }
    
    function deleteMessage(messageId, isAdmin) {
      if (confirm('Are you sure you want to delete this message?')) {
        socket.emit('delete-message', {
          sessionId,
          messageId,
          userId,
          isAdmin
        });
      }
    }
    
    function editMessage(messageId) {
      const newContent = prompt('Edit your message:');
      if (newContent) {
        socket.emit('edit-message', {
          sessionId,
          messageId,
          userId,
          newContent
        });
      }
    }
    
    function replyToMessage(username) {
      const input = document.getElementById('messageInput');
      input.value = `@${username} `;
      input.focus();
    }
    
    // AI functions
    function openAIFeatures() {
      document.getElementById('aiPanel').style.display = 'block';
    }
    
    function sendAIPrompt() {
      const prompt = document.getElementById('aiPrompt').value.trim();
      if (prompt) {
        socket.emit('chat-message', {
          sessionId,
          userId,
          content: `/GTP ${prompt}`
        });
        document.getElementById('aiPrompt').value = '';
      }
    }
    
    // Group functions
    function toggleGroupInfo() {
      const panel = document.getElementById('groupInfoPanel');
      panel.style.display = panel.style.display === 'block' ? 'none' : 'block';
    }
    
    function copyGroupLink() {
      navigator.clipboard.writeText(window.location.href)
        .then(() => alert('Group link copied to clipboard!'));
    }
    
    // Initialize
    window.onload = scrollToBottom;
  </script>
</body>
</html> 
