<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard | Contact Gain</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #6366f1;
            --primary-light: #818cf8;
            --secondary: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #0ea5e9;
            --dark: #1e293b;
            --light: #f8fafc;
            --gray: #94a3b8;
            --card-bg: #ffffff;
            --card-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            --sidebar-width: 280px;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f1f5f9;
            color: var(--dark);
            display: flex;
            min-height: 100vh;
        }
        
        /* Sidebar Styles */
        .sidebar {
            width: var(--sidebar-width);
            background: linear-gradient(180deg, #4f46e5 0%, #3b82f6 100%);
            color: white;
            height: 100vh;
            position: fixed;
            overflow-y: auto;
            padding: 1.5rem 0;
            box-shadow: 3px 0 10px rgba(0, 0, 0, 0.1);
            z-index: 100;
        }
        
        .logo {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0 1.5rem 1.5rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 1.5rem;
        }
        
        .logo i {
            font-size: 1.5rem;
            color: white;
        }
        
        .logo-text {
            display: flex;
            flex-direction: column;
            font-weight: 700;
            font-size: 1.25rem;
            line-height: 1.25;
        }
        
        .logo-text span:first-child {
            color: white;
        }
        
        .logo-text span:last-child {
            color: #c7d2fe;
            font-size: 0.875rem;
            font-weight: 400;
        }
        
        .nav-links {
            padding: 0 1rem;
        }
        
        .nav-link {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            font-weight: 500;
            margin-bottom: 0.25rem;
            transition: all 0.2s ease;
        }
        
        .nav-link:hover, .nav-link.active {
            background: rgba(255, 255, 255, 0.15);
            color: white;
        }
        
        .nav-link i {
            width: 1.5rem;
            text-align: center;
        }
        
        .user-section {
            padding: 1.5rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            margin-top: auto;
        }
        
        .user-info {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .avatar {
            width: 2.5rem;
            height: 2.5rem;
            border-radius: 50%;
            background: var(--primary-light);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: white;
        }
        
        .user-details {
            flex: 1;
        }
        
        .user-name {
            font-weight: 600;
            color: white;
        }
        
        .user-role {
            font-size: 0.75rem;
            color: rgba(255, 255, 255, 0.7);
        }
        
        /* Main Content Styles */
        .main-content {
            flex: 1;
            margin-left: var(--sidebar-width);
            padding: 2rem;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .header h1 {
            font-size: 1.875rem;
            font-weight: 700;
            color: var(--dark);
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .stat-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            transition: transform 0.2s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }
        
        .stat-icon {
            width: 3rem;
            height: 3rem;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
        }
        
        .stat-icon.sessions {
            background: rgba(99, 102, 241, 0.1);
            color: var(--primary);
        }
        
        .stat-icon.active {
            background: rgba(16, 185, 129, 0.1);
            color: var(--secondary);
        }
        
        .stat-icon.contacts {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning);
        }
        
        .stat-icon.downloads {
            background: rgba(14, 165, 233, 0.1);
            color: var(--info);
        }
        
        .stat-title {
            font-size: 0.875rem;
            color: var(--gray);
            margin-bottom: 0.25rem;
        }
        
        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--dark);
        }
        
        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 1.5rem;
        }
        
        @media (max-width: 1200px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
        }
        
        .card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: var(--card-shadow);
            margin-bottom: 1.5rem;
        }
        
        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.25rem;
        }
        
        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
        }
        
        .view-all {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        /* Sessions Section */
        .sessions-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
        }
        
        .view-all {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .sessions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }
        
        .session-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 1.5rem;
            transition: all 0.3s ease;
            box-shadow: var(--card-shadow);
            position: relative;
            overflow: hidden;
        }
        
        .session-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        
        .session-status {
            position: absolute;
            top: 1rem;
            right: 1rem;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .status-active {
            background: rgba(16, 185, 129, 0.1);
            color: var(--secondary);
        }
        
        .status-expired {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning);
        }
        
        .status-deleted {
            background: rgba(239, 68, 68, 0.1);
            color: var(--danger);
        }
        
        .session-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--dark);
        }
        
        .session-info {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            margin-bottom: 1rem;
            color: var(--gray);
            font-size: 0.875rem;
        }
        
        .session-actions {
            display: flex;
            gap: 0.5rem;
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            border: none;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background: #4f46e5;
        }
        
        .btn-danger {
            background: var(--danger);
            color: white;
        }
        
        .btn-danger:hover {
            background: #dc2626;
        }
        
        .btn-outline {
            background: transparent;
            border: 1px solid var(--gray);
            color: var(--dark);
        }
        
        .btn-outline:hover {
            background: rgba(148, 163, 184, 0.1);
        }
        
        /* Users Section */
        .users-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }
        
        .user-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1rem;
            border-radius: 8px;
            transition: all 0.2s ease;
        }
        
        .user-item:hover {
            background: rgba(148, 163, 184, 0.1);
        }
        
        .user-avatar {
            width: 3rem;
            height: 3rem;
            border-radius: 50%;
            background: var(--primary-light);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: white;
            flex-shrink: 0;
        }
        
        .user-info {
            flex: 1;
        }
        
        .user-name {
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 0.25rem;
        }
        
        .user-username {
            font-size: 0.875rem;
            color: var(--gray);
        }
        
        .user-status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
        }
        
        .status-indicator {
            width: 0.75rem;
            height: 0.75rem;
            border-radius: 50%;
        }
        
        .status-online {
            background: var(--secondary);
        }
        
        .status-offline {
            background: var(--gray);
        }
        
        .user-actions {
            display: flex;
            gap: 0.5rem;
        }
        
        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .session-card {
            animation: fadeIn 0.3s ease forwards;
        }
        
        .session-card:nth-child(2) { animation-delay: 0.1s; }
        .session-card:nth-child(3) { animation-delay: 0.2s; }
        .session-card:nth-child(4) { animation-delay: 0.3s; }
        
        /* Toast Notification */
        .toast {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background: var(--dark);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.3s ease;
            z-index: 1000;
        }
        
        .toast.show {
            transform: translateY(0);
            opacity: 1;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="logo">
            <i class="fas fa-bolt"></i>
            <div class="logo-text">
                <span>Contact</span>
                <span>Gain</span>
            </div>
        </div>
        <div class="nav-links">
            <a href="/admin" class="nav-link active">
                <i class="fas fa-chart-line"></i> Dashboard
            </a>
            <a href="/chat" class="nav-link">
                <i class="fas fa-comments"></i> Community Chat
            </a>
            <a href="#" class="nav-link">
                <i class="fas fa-users"></i> Sessions
            </a>
            <a href="#" class="nav-link">
                <i class="fas fa-file-contract"></i> Contacts
            </a>
            <a href="#" class="nav-link">
                <i class="fas fa-history"></i> History
            </a>
            <a href="#" class="nav-link">
                <i class="fas fa-cog"></i> Settings
            </a>
        </div>
        <a href="/logout" class="logout-btn">
            <i class="fas fa-sign-out-alt"></i> Logout
        </a>
    </div>

    <div class="main-content">
        <div class="header">
            <h1>Admin Dashboard</h1>
            <div class="user-greeting">
                <span>Hello, <%= user.username %>!</span>
            </div>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-title">Total Sessions</div>
                        <div class="stat-value"><%= stats.totalSessions %></div>
                    </div>
                    <div class="stat-icon sessions">
                        <i class="fas fa-users"></i>
                    </div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-title">Active Sessions</div>
                        <div class="stat-value"><%= stats.activeSessions %></div>
                    </div>
                    <div class="stat-icon active">
                        <i class="fas fa-bolt"></i>
                    </div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-title">Total Contacts</div>
                        <div class="stat-value"><%= stats.totalContacts %></div>
                    </div>
                    <div class="stat-icon contacts">
                        <i class="fas fa-address-book"></i>
                    </div>
                </div>
            </div>
            
            <div class="stat-card">
                <div class="stat-header">
                    <div>
                        <div class="stat-title">WhatsApp Groups</div>
                        <div class="stat-value"><%= stats.sessionsWithWhatsapp %></div>
                    </div>
                    <div class="stat-icon downloads">
                        <i class="fab fa-whatsapp"></i>
                    </div>
                </div>
            </div>
        </div>

        <div class="content-grid">
            <div class="left-column">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Recent Sessions</h2>
                        <a href="#" class="view-all">View All <i class="fas fa-arrow-right"></i></a>
                    </div>
                    <div class="sessions-grid">
                        <% recentSessions.forEach(session => { %>
                        <div class="session-card">
                            <span class="session-status status-<%= session.status %>">
                                <%= session.status.charAt(0).toUpperCase() + session.status.slice(1) %>
                            </span>
                            <h3 class="session-title"><%= session.groupName %></h3>
                            <div class="session-info">
                                <div><i class="fas fa-user"></i> Created by: <%= session.userId ? session.userId.username : 'Unknown' %></div>
                                <div><i class="fas fa-clock"></i> Duration: <%= session.timer %> mins</div>
                                <div><i class="fas fa-download"></i> Downloads: <%= session.downloadCount %></div>
                            </div>
                            <div class="session-actions">
                                <button class="btn btn-outline">
                                    <i class="fas fa-eye"></i> View
                                </button>
                                <button class="btn btn-danger delete-session" data-sessionid="<%= session.sessionId %>">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                </div>
            </div>
            
            <div class="right-column">
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">User Management</h2>
                    </div>
                    <div class="users-list">
                        <% users.forEach(user => { %>
                        <div class="user-item">
                            <div class="user-avatar">
                                <%= user.profile?.name ? user.profile.name.charAt(0) : user.username.charAt(0) %>
                            </div>
                            <div class="user-info">
                                <div class="user-name">
                                    <%= user.profile?.name || user.username %>
                                </div>
                                <div class="user-username">@<%= user.username %></div>
                                <div class="user-status">
                                    <span class="status-indicator <%= user.isSuspended ? 'status-offline' : 'status-online' %>"></span>
                                    <%= user.isSuspended ? 'Suspended' : 'Active' %>
                                </div>
                            </div>
                            <div class="user-actions">
                                <% if (user.isSuspended) { %>
                                <button class="btn btn-primary unsuspend-user" data-userid="<%= user._id %>">
                                    <i class="fas fa-user-check"></i> Unsuspend
                                </button>
                                <% } else { %>
                                <button class="btn btn-danger suspend-user" data-userid="<%= user._id %>">
                                    <i class="fas fa-user-slash"></i> Suspend
                                </button>
                                <% } %>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                </div>
                
                <div class="card">
                    <div class="card-header">
                        <h2 class="card-title">Recent Downloads</h2>
                    </div>
                    <div class="activity-list">
                        <% recentDownloads.forEach(download => { %>
                        <div class="activity-item">
                            <div class="activity-icon success">
                                <i class="fas fa-download"></i>
                            </div>
                            <div class="activity-info">
                                <div class="activity-title">Session <%= download.sessionId %> downloaded</div>
                                <div class="activity-time"><%= new Date(download.timestamp).toLocaleString() %></div>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="toast" id="toast">Action completed successfully!</div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        // Initialize Socket.IO
        const socket = io({
            auth: {
                userId: '<%= user._id %>'
            }
        });

        // Suspend User Functionality
        document.querySelectorAll('.suspend-user').forEach(button => {
            button.addEventListener('click', async () => {
                const userId = button.dataset.userid;
                const duration = prompt('Enter suspension duration in minutes:', '60');
                
                if (duration && !isNaN(duration) && duration > 0) {
                    try {
                        const response = await fetch(`/admin/user/${userId}/suspend`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ duration })
                        });
                        
                        const result = await response.json();
                        if (result.success) {
                            showToast('User suspended successfully!');
                            // Update UI
                            const userItem = button.closest('.user-item');
                            userItem.querySelector('.user-status').innerHTML = `
                                <span class="status-indicator status-offline"></span> Suspended
                            `;
                            userItem.querySelector('.user-actions').innerHTML = `
                                <button class="btn btn-primary unsuspend-user" data-userid="${userId}">
                                    <i class="fas fa-user-check"></i> Unsuspend
                                </button>
                            `;
                            
                            // Add event listener to new unsuspend button
                            userItem.querySelector('.unsuspend-user').addEventListener('click', handleUnsuspend);
                        }
                    } catch (error) {
                        console.error('Error suspending user:', error);
                        showToast('Failed to suspend user', true);
                    }
                }
            });
        });

        // Unsuspend User Functionality
        function handleUnsuspend(event) {
            const button = event.target.closest('.unsuspend-user');
            const userId = button.dataset.userid;
            
            fetch(`/admin/user/${userId}/unsuspend`, {
                method: 'POST'
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showToast('User unsuspended successfully!');
                    // Update UI
                    const userItem = button.closest('.user-item');
                    userItem.querySelector('.user-status').innerHTML = `
                        <span class="status-indicator status-online"></span> Active
                    `;
                    userItem.querySelector('.user-actions').innerHTML = `
                        <button class="btn btn-danger suspend-user" data-userid="${userId}">
                            <i class="fas fa-user-slash"></i> Suspend
                        </button>
                    `;
                    
                    // Add event listener to new suspend button
                    userItem.querySelector('.suspend-user').addEventListener('click', function(e) {
                        e.preventDefault();
                        const userId = this.dataset.userid;
                        const duration = prompt('Enter suspension duration in minutes:', '60');
                        
                        if (duration && !isNaN(duration) && duration > 0) {
                            fetch(`/admin/user/${userId}/suspend`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ duration })
                            })
                            .then(response => response.json())
                            .then(result => {
                                if (result.success) {
                                    showToast('User suspended successfully!');
                                    // Update UI
                                    const userItem = this.closest('.user-item');
                                    userItem.querySelector('.user-status').innerHTML = `
                                        <span class="status-indicator status-offline"></span> Suspended
                                    `;
                                    userItem.querySelector('.user-actions').innerHTML = `
                                        <button class="btn btn-primary unsuspend-user" data-userid="${userId}">
                                            <i class="fas fa-user-check"></i> Unsuspend
                                        </button>
                                    `;
                                    
                                    // Reattach event listener
                                    userItem.querySelector('.unsuspend-user').addEventListener('click', handleUnsuspend);
                                }
                            })
                            .catch(error => {
                                console.error('Error suspending user:', error);
                                showToast('Failed to suspend user', true);
                            });
                        }
                    });
                }
            })
            .catch(error => {
                console.error('Error unsuspending user:', error);
                showToast('Failed to unsuspend user', true);
            });
        }
        
        document.querySelectorAll('.unsuspend-user').forEach(button => {
            button.addEventListener('click', handleUnsuspend);
        });

        // Delete Session Functionality
        document.querySelectorAll('.delete-session').forEach(button => {
            button.addEventListener('click', async () => {
                if (confirm('Are you sure you want to delete this session? This action cannot be undone.')) {
                    const sessionId = button.dataset.sessionid;
                    
                    try {
                        const response = await fetch(`/admin/session/${sessionId}/delete`, {
                            method: 'POST'
                        });
                        
                        const result = await response.json();
                        if (result.success) {
                            showToast('Session deleted successfully!');
                            // Remove the session card from UI
                            button.closest('.session-card').remove();
                        }
                    } catch (error) {
                        console.error('Error deleting session:', error);
                        showToast('Failed to delete session', true);
                    }
                }
            });
        });

        // Toast notification function
        function showToast(message, isError = false) {
            const toast = document.getElementById('toast');
            toast.textContent = message;
            if (isError) {
                toast.style.background = 'var(--danger)';
            } else {
                toast.style.background = 'var(--dark)';
            }
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>
